name: Trigger PR in test2 on PR merge

on:
  pull_request:
    types: [closed]

jobs:
  check_commit_message:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_msg.outputs.run_job }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug merge commit SHA
        env:
          MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
        run: echo "Merge commit SHA: $MERGE_SHA"

      - name: Check merge commit message for [AVO]
        id: check_msg
        env:
          MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
        shell: bash
        run: |
          if [ -z "$MERGE_SHA" ]; then
            echo "MERGE_SHA is empty. Exiting with run_job=false"
            echo "run_job=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          COMMIT_MSG=$(git log -1 --pretty=%B $MERGE_SHA)
          echo "Merge commit message: $COMMIT_MSG"
          if [[ "$COMMIT_MSG" == *"[AVO]"* ]]; then
            echo "run_job=true" >> $GITHUB_OUTPUT
          else
            echo "run_job=false" >> $GITHUB_OUTPUT
          fi

  trigger_pr_in_test2:
    needs: check_commit_message
    if: needs.check_commit_message.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout test1 repo (current repo)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GitHub CLI
        run: |
          if ! command -v gh &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y gh
          fi

      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | gh auth login --with-token

      - name: Clone test2 repo
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git clone https://github.com/Gokulakrishnan-k/test2.git
          cd test2
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/Gokulakrishnan-k/test2.git
          ls -la

      - name: Copy changed files to test2 repo
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
        run: |
          echo "Base SHA: $BASE_SHA"
          echo "Merge commit SHA: $MERGE_SHA"

          CHANGED_FILES=$(git diff --name-only $BASE_SHA $MERGE_SHA)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed files to copy. Exiting."
            exit 0
          fi

          cd test2
          BRANCH_NAME="auto-pr-from-test1-${PR_NUMBER}"

          if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists. Exiting."
            exit 0
          fi

          git checkout -b $BRANCH_NAME
          cd ..

          for file in $CHANGED_FILES; do
            echo "Copying $file to test2"
            mkdir -p "test2/$(dirname $file)"
            cp "$file" "test2/$file"
          done

      - name: Commit and push changes in test2 repo
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cd test2
          BRANCH_NAME="auto-pr-from-test1-${PR_NUMBER}"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add .
          git commit -m "Sync changes from test1 PR #${PR_NUMBER}"
          git push origin $BRANCH_NAME

      - name: Create PR in test2 repo
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          gh pr create --repo Gokulakrishnan-k/test2 \
            --head auto-pr-from-test1-${PR_NUMBER} \
            --title "Auto PR triggered by merged PR #${PR_NUMBER} in test1" \
            --body "This PR was automatically created after merging PR #${PR_NUMBER} in test1."
